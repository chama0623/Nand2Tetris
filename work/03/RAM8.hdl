// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    DMux8Way(in=true, sel=address, a=reg0, b=reg1, c=reg2, d=reg3, e=reg4, f=reg5, g=reg6, h=reg7);
    And(a=reg0, b=load, out=isLoad0);
    Register(in=in, load=isLoad0, out=out0);
    And(a=reg1, b=load, out=isLoad1);
    Register(in=in, load=isLoad1, out=out1);
    And(a=reg2, b=load, out=isLoad2);
    Register(in=in, load=isLoad2, out=out2);
    And(a=reg3, b=load, out=isLoad3);
    Register(in=in, load=isLoad3, out=out3);
    And(a=reg4, b=load, out=isLoad4);
    Register(in=in, load=isLoad4, out=out4);
    And(a=reg5, b=load, out=isLoad5);
    Register(in=in, load=isLoad5, out=out5);
    And(a=reg6, b=load, out=isLoad6);
    Register(in=in, load=isLoad6, out=out6);
    And(a=reg7, b=load, out=isLoad7);
    Register(in=in, load=isLoad7, out=out7);
    Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address, out=out);
}